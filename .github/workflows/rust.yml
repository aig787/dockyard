name: Rust CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always
jobs:
  build:
    runs-on: ubuntu-latest
    name: Rust ${{ matrix.rust }}
    strategy:
      matrix:
        rust: ["stable", "beta"]
        experimental: [false]
        include:
          - rust: "nightly"
            experimental: true

    steps:
    - name: Toolchain with rustfmt and clippy
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy
    - uses: actions/checkout@v2
    - name: Release build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --all-features
    - name: Make container
      run: "ln -s .dockerignore.linux .dockerignore && make docker"
    - name: Run tests
      run: cargo test --verbose

    # Run code security audit against stable
    - name: Security audit
      uses: actions-rs/audit-check@v1
      if: ${{ matrix.rust == 'stable' }}
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    # Run code coverage on stable
    - name: Install cargo-tarpualin
      run: "cargo install cargo-tarpaulin"
      if: ${{ matrix.rust == 'stable' }}
    - name: Run cargo-tarpaulin
      run: "cargo tarpaulin --out Lcov --verbose"
      if: ${{ matrix.rust == 'stable'}}
    - name: Upload coverage to Coveralls
      uses: coverallsapp/github-action@master
      if: ${{ matrix.rust == 'stable' }}
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: lcov.info
    # Run clippy as nightly
    - name: Annotate commit with clippy warnings
      uses: actions-rs/clippy-check@v1
      if: ${{ matrix.rust == 'nightly' }}
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-features
